{"version":3,"sources":["logo.svg","CustomerForm/CustomerForm.js","App.js","reportWebVitals.js","index.js"],"names":["CustomerForm","yup","shape","firstName","required","useState","Date","profilePicture","setProfilePicture","isLoaded","setIsLoaded","singleCustDetails","setSingleCustDetails","history","useHistory","useForm","register","handleSubmit","errors","formState","reset","control","useEffect","cust_id","localStorage","getItem","temp_cust","JSON","parse","className","data-testid","style","paddingTop","length","onSubmit","data","formData","FormData","append","lastName","occupation","dob","status","bio","acceptTerms","axios","put","_id","headers","then","res","console","log","success","push","catch","err","stringify","Card","Header","Body","type","name","defaultValue","placeholder","color","value","rows","cols","fontWeight","defaultChecked","for","onChange","e","target","files","Footer","Button","id","htmlFor","paddingLeft","onClick","entries","post","alert","EmailShareButton","subject","size","round","body","EmailIcon","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa607049.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as React from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useState, useEffect } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useHistory } from 'react-router-dom';\nimport { EmailShareButton,EmailIcon } from 'react-share';\nimport axios from 'axios';\nimport { Button, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as yup from \"yup\";\n\nconst SignupSchema = yup.object().shape({\n    firstName: yup.string().required(),\n});\n\nconst CustomerForm = () => {\n    const [startDate, setStartDate] = useState(new Date());\n    const [profilePicture, setProfilePicture] = useState('');\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [isFeatched, setIsFeatched] = useState(false);\n    const [editcustData, setEditCustData] = useState([])\n    const [singleCustDetails, setSingleCustDetails] = useState([])\n    const history = useHistory();\n    const { register, handleSubmit, formState: { errors }, reset, control } = useForm({\n    });\n\n\n    useEffect(() => {\n        const cust_id = localStorage.getItem(\"custId\");\n        if (cust_id) {\n            setIsLoaded(true);\n            let temp_cust = JSON.parse(cust_id);\n            setSingleCustDetails(temp_cust);\n            reset(temp_cust)\n\n        }\n    }, [reset]);\n\n    useEffect(() => {\n\n    }, [singleCustDetails]);\n\n    const handleChange = (e) => {\n        if (e.target.name === \"profilePicture\") {\n            setProfilePicture({\n                profilePicture: e.target.files,\n            });\n        }\n    };\n\n    const onSubmit = (data) => {\n\n        const formData = new FormData();\n        formData.append('firstName', data.firstName);\n        formData.append('lastName', data.lastName);\n        formData.append('occupation', data.occupation);\n        // formData.append('dob', data.dob);\n        formData.append('status', data.status);\n        formData.append('bio', data.bio);\n        formData.append('acceptTerms', data.acceptTerms)\n\n        // formData.append('profilePicture', profilePicture)\n\n        console.log(\"formdata \", formData.entries());\n\n        const req_data2 = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        }\n\n        axios.post('http://localhost:5000/customer', formData, req_data2)\n            .then((res) => {\n                console.log('res ', res);\n                alert(\"data added successfully \")\n                if (res.data.success) {\n                    history.push(\"/\");\n                }\n            })\n            .catch((err) => {\n                console.log(\"errorrrr \" + JSON.stringify(err))\n            })\n        // alert(\"data added successfully\")\n    }\n\n    const editCustomerDetails = (data) => {\n\n        const formData = new FormData();\n        formData.append('firstName', data.firstName);\n        formData.append('lastName', data.lastName);\n        formData.append('occupation', data.occupation);\n        formData.append('dob', data.dob);\n        formData.append('status', data.status);\n        formData.append('bio', data.bio);\n        formData.append('acceptTerms', data.acceptTerms)\n\n        formData.append('profilePicture', profilePicture)\n\n\n        const req_data2 = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        }\n\n        axios.put(`http://localhost:5000/customer/${singleCustDetails[0]._id}`, formData, req_data2)\n            .then((res) => {\n                console.log('res ', res);\n                if (res.data.success) {\n                    history.push(\"/\");\n                }\n            })\n            .catch((err) => {\n                console.log(\"error \" + JSON.stringify(err))\n            })\n    }\n\n    return (\n        <div className=\"container\" data-testid=\"custform-1\">\n            <div className=\"col-md-8 offset-md-2\">\n                <h4 style={{ paddingTop: \"20px\" }}></h4>\n\n                {singleCustDetails.length != 0 ?\n                    (\n                        <form onSubmit={handleSubmit(editCustomerDetails)}>\n                            <Card>\n                                <Card.Header>User Form</Card.Header>\n                                <Card.Body>\n                                    <div className=\"form-group\">\n                                        <input className=\"form-control\"\n                                            type=\"text\"\n                                            name=\"firstName\"\n                                            defaultValue={isLoaded ? singleCustDetails[0].firstName : 'NAME'}\n                                            {...register('firstName', { required: true })} placeholder=\"First Name\">\n\n                                        </input>\n                                        {errors.firstName && errors.firstName.type === \"required\" && <span style={{ color: \"red\" }}>This is required</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            defaultValue={isLoaded ? singleCustDetails[0].lastName : ''}\n                                            className=\"form-control\"\n                                            {...register('lastName', { required: true })}\n                                            placeholder=\"Last Name\" />\n                                        {errors.lastName && errors.lastName.type === \"required\" && <span style={{ color: \"red\" }}>This is required</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <select\n                                            className=\"form-control\"\n                                            placeholder=\"occupation\"\n                                            defaultValue={isLoaded ? singleCustDetails[0].occupation : ''}\n                                            {...register('occupation', { required: true })}>\n                                            <option value=\"employed\">employed</option>\n                                            <option value=\"business\">business</option>\n                                            <option value=\"student\">student</option>\n\n                                        </select>\n                                        {errors.occupation && errors.occupation.type === \"required\" && <span style={{ color: \"red\" }}>This is required</span>}\n\n                                    </div>\n                                    {/* <div className=\"form-group\" style={{ display: \"grid\" }}>\n                                        <DatePicker\n                                            className=\"form-control\"\n                                            // defaultValue={isLoaded ? singleCustDetails[0].dob : ''}\n                                            {...register('dob', { required: true })}\n                                            // dateFormat=\"yyyy/mm/dd\"\n                                            value={startDate}\n                                            selected={startDate}\n                                            placeholderText={singleCustDetails[0].dob}\n                                            onChange={date => setStartDate(date)} />\n\n                                        {errors.dob && errors.dob.type === \"required\" && <span style={{ color: \"red\" }}>This is required</span>}\n                                    </div> */}\n\n                                    <div className=\"form-group\">\n                                        <textarea\n                                            className=\"form-control\"\n                                            defaultValue={isLoaded ? singleCustDetails[0].bio : \"\"}\n                                            {...register('bio')} placeholder=\"bio\"\n                                            rows=\"2\"\n                                            cols=\"50\"></textarea></div>\n                                    <div className=\"form-group text-left\">\n                                        <div className=\"form-check form-check-inline\" style={{ fontWeight: \"bold\" }}>Status:</div>\n                                        <div className=\"form-check form-check-inline\" >\n                                            <input\n                                                className=\"form-check-input\"\n                                                // defaultValue={isLoaded ? singleCustDetails[0].status : ''}\n                                                defaultChecked={isLoaded && singleCustDetails[0].status == \"Active\"}\n                                                {...register('status', { required: true })}\n                                                type=\"radio\"\n                                                value=\"Active\"></input>\n\n                                            <label className=\"form-check-label\" for=\"active\">Active</label>\n                                        </div>\n                                        <div className=\"form-check form-check-inline\"  >\n                                            <input\n                                                className=\"form-check-input\"\n                                                defaultChecked={isLoaded && singleCustDetails[0].status == \"Inactive\"}\n                                                {...register('status', { required: true })}\n                                                type=\"radio\" value=\"Inactive\" ></input>\n                                            <label className=\"form-check-label\" for=\"inactive\">Inactive</label>&nbsp;&nbsp;\n                                            {errors.status && errors.status.type === \"required\" && <span style={{ color: \"red\" }}>This is required</span>}\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group text-left\">\n                                        <input onChange={e => {\n                                            setProfilePicture(e.target.files[0])\n                                        }}\n                                            // value={isLoaded ? singleCustDetails[0].profilePicture : ''}\n                                            type=\"file\" name=\"profilePicture\"></input></div>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <Button className=\"btn btn-primary btn-large centerButton\" type=\"submit\">Save Changes</Button>\n                                </Card.Footer>\n                            </Card>\n                        </form>) : \"\"}\n\n                {singleCustDetails.length == 0 ?\n                    (\n                        <Card >\n                            <Card.Header><h4>User Form</h4></Card.Header>\n\n                            <form\n                            // onSubmit={handleSubmit(onSubmit)}\n                            >\n                                <Card.Body>\n                                    <div className=\"form-group\">\n                                        <input className=\"form-control inputboxstyle\"\n                                            type=\"text\"\n                                            name=\"firstName\"\n                                            data-testid=\"firstName-1\"\n                                            {...register('firstName', { required: true })} placeholder=\"First Name\">\n\n                                        </input>\n                                        {errors.firstName && errors.firstName.type === \"required\" && <span style={{ color: \"red\" }}>This is required</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            data-testid=\"lastName-1\"\n                                            className=\"form-control\"\n                                            {...register('lastName', { required: true })}\n                                            placeholder=\"Last Name\" />\n                                        {errors.lastName && errors.lastName.type === \"required\" && <span style={{ color: \"red\" }}>This is required</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <select\n                                            data-testid=\"occupation-1\"\n                                            className=\"form-control\"\n                                            placeholder=\"occupation\"\n                                            {...register('occupation', { required: true })}>\n                                            <option value=\"employed\">employed</option>\n                                            <option value=\"business\">business</option>\n                                            <option value=\"student\">student</option>\n\n                                        </select>\n                                        {errors.occupation && errors.occupation.type === \"required\" && <span style={{ color: \"red\" }}>This is required</span>}\n\n                                    </div>\n                                    {/* <div className=\"form-group\" style={{ display: \"grid\" }} data-testid=\"dob-1\"\n                                    >\n                                        <DatePicker\n                                            className=\"form-control\"\n                                            {...register('dob', { required: true })}\n                                            value={startDate}\n                                            selected={startDate}\n                                            onChange={date => setStartDate(date)} />\n                                        {errors.dob && errors.dob.type === \"required\" && <span style={{ color: \"red\" }}>This is required</span>}\n                                    </div> */}\n\n\n                                    <div className=\"form-group\">\n                                        <textarea\n                                            data-testid=\"bio-1\"\n                                            className=\"form-control\"\n                                            {...register('bio')} placeholder=\"User Information\"\n                                            rows=\"2\"\n                                            cols=\"50\"></textarea></div>\n\n                                    <div className=\"form-group text-left\">\n\n                                        <div className=\"form-check form-check-inline\" style={{ fontWeight: \"bold\" }}>Select Gender:</div>\n                                        <div className=\"form-check form-check-inline\" >\n                                            <input\n                                                data-testid=\"activestatus-1\"\n                                                className=\"form-check-input\"\n                                                {...register('status', { required: true })}\n                                                type=\"radio\"\n                                                value=\"Male\"></input>\n\n                                            <label className=\"form-check-label\" for=\"male\">Male</label>\n                                        </div>\n                                        <div className=\"form-check form-check-inline\"  >\n                                            <input\n                                                data-testid=\"inactivestatus-1\"\n                                                className=\"form-check-input\"\n                                                {...register('status', { required: true })}\n                                                type=\"radio\" value=\"Female\" ></input>\n                                            <label className=\"form-check-label\" for=\"female\">Female</label>&nbsp;&nbsp;\n                                            {errors.status && errors.status.type === \"required\" && <span style={{ color: \"red\" }}>This is required</span>}\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group text-left\" >\n                                        <div className=\"form-check form-check-inline\" style={{ fontWeight: \"bold\" }}>Select Programming Language:</div>\n\n                                        <div className=\"form-group form-check form-check-inline\">\n                                            <input name=\"acceptTerms\" type=\"checkbox\" {...register('acceptTerms')} id=\"acceptTerms\" className={`form-check-input ${errors.acceptTerms ? 'is-invalid' : ''}`} />\n                                            <label htmlFor=\"acceptTerms\" className=\"form-check-label\">HTML</label>\n                                        </div>\n                                        <div className=\"form-group form-check\" style={{ paddingLeft: \"272px\" }}>\n                                            <input name=\"acceptTerms\" type=\"checkbox\" {...register('acceptTerms')} id=\"acceptTerms\" className={`form-check-input ${errors.acceptTerms ? 'is-invalid' : ''}`} />\n                                            <label htmlFor=\"acceptTerms\" className=\"form-check-label\">CSS</label>\n                                        </div>\n                                        <div className=\"form-group form-check\" style={{ paddingLeft: \"272px\" }}>\n                                            <input name=\"acceptTerms\" type=\"checkbox\" {...register('acceptTerms')} id=\"acceptTerms\" className={`form-check-input ${errors.acceptTerms ? 'is-invalid' : ''}`} />\n                                            <label htmlFor=\"acceptTerms\" className=\"form-check-label\">JavaScript</label>\n                                        </div>\n                                        <div className=\"form-group form-check\" style={{ paddingLeft: \"272px\" }}>\n                                            <input name=\"acceptTerms\" type=\"checkbox\" {...register('acceptTerms')} id=\"acceptTerms\" className={`form-check-input ${errors.acceptTerms ? 'is-invalid' : ''}`} />\n                                            <label htmlFor=\"acceptTerms\" className=\"form-check-label\">React js</label>\n                                        </div>\n                                    </div>\n\n\n                                    {/* <div className=\"form-group text-left\" >\n                                        <input\n                                            data-testid=\"inputtype-1\"\n                                            onChange={e => {\n                                                setProfilePicture(e.target.files[0])\n                                            }}\n                                            type=\"file\" ></input>\n                                    </div> */}\n                                </Card.Body>\n                            </form>\n                            <Card.Footer>\n                                <div >\n                                    <Button data-testid=\"custformsubmitbtn-1\" className=\"btn btn-primary btn-large\" type=\"submit\" onClick={handleSubmit(onSubmit)}>Submit</Button>\n                                    &nbsp;&nbsp;&nbsp;\n                                    <EmailShareButton subject=\"user Information\" size={42} round={true} body={\"https://gajanansurwase-angularminds.github.io/\"}>\n                                        {/* <Button data-testid=\"custformsubmitbtn-1\" className=\"btn btn-primary btn-large\" type=\"submit\" onClick={handleSubmit(onShare)}>Share</Button> */}\n                                        <EmailIcon size={42} round={true}></EmailIcon>\n                                    </EmailShareButton>\n                                    {/* <a href=\"mailto:gsurwase274@gmail.com\">LinkedIn handle</a> */}\n                                </div>\n                            </Card.Footer>\n\n                        </Card>\n                    ) : \"\"}\n\n\n            </div>\n        </div>\n    );\n}\n\nexport default CustomerForm;","import logo from './logo.svg';\nimport './App.css';\nimport CustomerForm from \"./CustomerForm/CustomerForm\";\nimport CustomerTable from \"./CustomerTable/CustomerTable\";\nimport CustomerDetails from \"./CustomerDetails/CustomerDetails\";\nimport { BrowserRouter as Router, Route, IndexRoute } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CustomerForm />\n      {/* <CustomerTable/> */}\n      {/* <Router>\n        <Route path={\"/\"} component={CustomerTable} exact/>\n        <Route path={\"/customerform\"} component={CustomerForm} />\n        <Route path={\"/customerdetails\"} component={CustomerDetails} />\n\n      </Router> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}